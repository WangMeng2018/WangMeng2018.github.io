<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>鱼咸滚酱</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/"/>
  <updated>2019-09-14T04:31:40.741Z</updated>
  <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/</id>
  
  <author>
    <name>鱼咸滚酱</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>brew安装权限问题</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/14/brew%E5%AE%89%E8%A3%85%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/14/brew安装权限问题/</id>
    <published>2019-09-14T04:29:14.000Z</published>
    <updated>2019-09-14T04:31:40.741Z</updated>
    
    <content type="html"><![CDATA[<p>brew install wget 出现类似问题：  </p><img src="/2019/09/14/brew安装权限问题/1.jpg" title="avatar">  <p>解决办法：一个一个文件的赋予权限：  </p><img src="/2019/09/14/brew安装权限问题/2.jpg" title="avatar"> ]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;brew install wget 出现类似问题：  &lt;/p&gt;
&lt;img src=&quot;/2019/09/14/brew安装权限问题/1.jpg&quot; title=&quot;avatar&quot;&gt;  

&lt;p&gt;解决办法：一个一个文件的赋予权限：  &lt;/p&gt;
&lt;img src=&quot;/2019/09/
      
    
    </summary>
    
    
      <category term="软件" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="brew" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/brew/"/>
    
  </entry>
  
  <entry>
    <title>不同类型的文献检索</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/12/%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/12/不同类型的文献检索/</id>
    <published>2019-09-12T05:02:00.000Z</published>
    <updated>2019-09-12T05:22:47.870Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、图书类检索"><a href="#一、图书类检索" class="headerlink" title="一、图书类检索"></a>一、图书类检索</h1><ol><li>大英百科全书电子版  <a href="http://academic.eb.com/" target="_blank" rel="noopener">http://academic.eb.com/</a></li><li>Knovel电子工具书  <a href="http://app.knovel.com/web/" target="_blank" rel="noopener">http://app.knovel.com/web/</a></li><li>Springer电子书    <a href="http://link.springer.com/" target="_blank" rel="noopener">http://link.springer.com/</a></li><li>OECD ilibrary</li><li>美国国家学术出版社电子图书   <a href="http://www.nap.edu" target="_blank" rel="noopener">http://www.nap.edu</a></li><li>方正电子图书&amp;方正年鉴工具书  <a href="http://159.226.100.31/usp/" target="_blank" rel="noopener">http://159.226.100.31/usp/</a></li><li>超星电子图书  <a href="http://www.sslibrary.com/home/index" target="_blank" rel="noopener">http://www.sslibrary.com/home/index</a></li></ol><h1 id="二、学位论文"><a href="#二、学位论文" class="headerlink" title="二、学位论文"></a>二、学位论文</h1><ol><li>中国学位论文库 <a href="http://www.wanfangdata.com.cn" target="_blank" rel="noopener">http://www.wanfangdata.com.cn</a>  万方</li><li>中国学位馆藏检索  <a href="http://www.istic.ac.cn/" target="_blank" rel="noopener">http://www.istic.ac.cn/</a></li><li>中国科学院学位论文检索 <a href="http://sdb.las.ac.cn/paper/search_pap.jsp" target="_blank" rel="noopener">http://sdb.las.ac.cn/paper/search_pap.jsp</a></li><li>国家科技图书文献中心（NSTL）学位论文库  <a href="http://www.nstl.gov.cn" target="_blank" rel="noopener">http://www.nstl.gov.cn</a> </li><li>中国优秀博硕士论文全文数据库  <a href="http://www.cnki.net" target="_blank" rel="noopener">http://www.cnki.net</a></li><li>国家图书馆学位论文检索系统   <a href="http://www.nlc.gov.cn" target="_blank" rel="noopener">http://www.nlc.gov.cn</a></li><li>CALIS高校学位论文数据库  <a href="http://etd.calis.edu.cn" target="_blank" rel="noopener">http://etd.calis.edu.cn</a></li><li>CETD中文电子学位论文服务 <a href="http://www.airitilibrary.com/" target="_blank" rel="noopener">http://www.airitilibrary.com/</a></li></ol><h1 id="三、专利"><a href="#三、专利" class="headerlink" title="三、专利"></a>三、专利</h1><ol><li>国家知识产权局   <a href="http://www.sipo.gov.cn/sipo/" target="_blank" rel="noopener">http://www.sipo.gov.cn/sipo/</a></li><li>Derwent Innovation Index(ISI DII) </li><li>欧洲专利局专利数据库  <a href="http://ep.espacenet.com/?locale=en_EP" target="_blank" rel="noopener">http://ep.espacenet.com/?locale=en_EP</a> </li><li>美国专利与商标局专利全文数据库   <a href="http://www.uspto.gov/patft/index.html" target="_blank" rel="noopener">http://www.uspto.gov/patft/index.html</a> </li><li>世界知识产权组织专利检索  <a href="http://www.wipo.int/pctdb/en/" target="_blank" rel="noopener">http://www.wipo.int/pctdb/en/</a></li></ol><h1 id="四、标准"><a href="#四、标准" class="headerlink" title="四、标准"></a>四、标准</h1><h3 id="国内标准检索"><a href="#国内标准检索" class="headerlink" title="国内标准检索"></a>国内标准检索</h3><ol><li>NSTL 中外标准数据库  <a href="http://www.nstl.gov.cn" target="_blank" rel="noopener">http://www.nstl.gov.cn</a> </li><li>国家科学图书馆标准信息检索系统  <a href="http://www.las.ac.cn/standard/standard.jsp" target="_blank" rel="noopener">http://www.las.ac.cn/standard/standard.jsp</a></li><li>万方数据资源系统  <a href="http://www.wanfangdata.com.cn/" target="_blank" rel="noopener">http://www.wanfangdata.com.cn/</a></li><li>中国标准服务网  <a href="http://www.cssn.net.cn" target="_blank" rel="noopener">www.cssn.net.cn</a></li><li>标准网  <a href="http://www.standardcn.com" target="_blank" rel="noopener">www.standardcn.com</a></li><li>国家标准化管理委员会  <a href="http://www.sac.gov.cn/" target="_blank" rel="noopener">http://www.sac.gov.cn/</a> </li><li>国家军用标准化信息网  <a href="http://www.gjb.com.cn/" target="_blank" rel="noopener">http://www.gjb.com.cn/</a> </li></ol><h3 id="国外标准检索"><a href="#国外标准检索" class="headerlink" title="国外标准检索"></a>国外标准检索</h3><ol><li><a href="http://ieeexplore.ieee.org/" target="_blank" rel="noopener">http://ieeexplore.ieee.org/</a></li><li><a href="http://www.iso.org/" target="_blank" rel="noopener">http://www.iso.org/</a></li><li><a href="http://webstore.ansi.org/" target="_blank" rel="noopener">http://webstore.ansi.org/</a></li></ol><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li>NSTL 中外标准数据库  <a href="http://www.nstl.gov.cn/index.html" target="_blank" rel="noopener">http://www.nstl.gov.cn/index.html</a></li></ol><h1 id="五、科技报告"><a href="#五、科技报告" class="headerlink" title="五、科技报告"></a>五、科技报告</h1><ol><li>中国国家科技报告服务系统   <a href="http://www.nstrs.cn/" target="_blank" rel="noopener">http://www.nstrs.cn/</a></li><li>中国报告大厅   <a href="http://www.chinabgao.com" target="_blank" rel="noopener">http://www.chinabgao.com</a></li></ol><h1 id="六、数值数据"><a href="#六、数值数据" class="headerlink" title="六、数值数据"></a>六、数值数据</h1><ol><li>国务院发展研究中心信息网  <a href="http://drcnet.las.ac.cn" target="_blank" rel="noopener">http://drcnet.las.ac.cn</a></li><li>中国经济网产业数据库  <a href="http://ceicy.las.ac.cn" target="_blank" rel="noopener">http://ceicy.las.ac.cn</a></li><li>中国经济统计数据库  <a href="http://ceitj.las.ac.cn" target="_blank" rel="noopener">http://ceitj.las.ac.cn</a></li><li>中国资讯行搜数网   <a href="http://soshoo.las.ac.cn/" target="_blank" rel="noopener">http://soshoo.las.ac.cn/</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、图书类检索&quot;&gt;&lt;a href=&quot;#一、图书类检索&quot; class=&quot;headerlink&quot; title=&quot;一、图书类检索&quot;&gt;&lt;/a&gt;一、图书类检索&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;大英百科全书电子版  &lt;a href=&quot;http://academic.eb.com/&quot;
      
    
    </summary>
    
    
      <category term="文献检索" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>修改Jupyter Notebook目录</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/12/%E4%BF%AE%E6%94%B9Jupyter-Notebook%E7%9B%AE%E5%BD%95/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/12/修改Jupyter-Notebook目录/</id>
    <published>2019-09-12T04:48:22.000Z</published>
    <updated>2019-09-12T04:55:00.244Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>打开 Anaconda Prompt ，输入:   </p><blockquote><p>jupyter notebook –generate-config  </p></blockquote></li><li><p>找到 jupyter_notebook_config.py 的路径并打此文件;  </p></li><li><p>找到 c.NotebookApp.notebook_dir 这个变量，赋值为： ‘E:\Code\Jupyter-notebook’;  </p><img src="/2019/09/12/修改Jupyter-Notebook目录/1.jpg" title="avatar">  <p>Ubuntu下的修改方法类似。</p></li><li><p>改完后保存，再次通过 Anaconda Navigator 进入 Jupyter Notebook 的时候会发现默认路径已经更改。  </p></li><li><p>如果直接通过 Jupyter Notebook 的快捷方式进入，默认目录还是原来那个。如果需要修改，找到快捷方式，右键打开属性，将“目标” 最后面的 “%USERPROFILE%” 删除就可以了。  </p></li></ol><p>参考链接：  </p><ul><li><a href="https://blog.csdn.net/white_rabbit_2/article/details/83862429" target="_blank" rel="noopener">https://blog.csdn.net/white_rabbit_2/article/details/83862429</a>  </li><li><a href="https://blog.csdn.net/weixin_36292173/article/details/76209839" target="_blank" rel="noopener">https://blog.csdn.net/weixin_36292173/article/details/76209839</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开 Anaconda Prompt ，输入:   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;jupyter notebook –generate-config  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;找到 jupyter_not
      
    
    </summary>
    
    
      <category term="软件" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Mac下Anaconda配置环境变量</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/11/Mac%E4%B8%8BAnaconda%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/11/Mac下Anaconda配置环境变量/</id>
    <published>2019-09-11T07:10:05.000Z</published>
    <updated>2019-09-11T07:23:44.520Z</updated>
    
    <content type="html"><![CDATA[<p>Anaconda安装成功之后，需要配置环境变量。  </p><blockquote><p>vim ~/.zshrc<br>export PATH=”/Applications/anaconda3/bin:$PATH”<br>source ~/.zshrc<br>conda –version   #测试是否配置成功</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Anaconda安装成功之后，需要配置环境变量。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;vim ~/.zshrc&lt;br&gt;export PATH=”/Applications/anaconda3/bin:$PATH”&lt;br&gt;source ~/.zshrc&lt;br&gt;cond
      
    
    </summary>
    
    
      <category term="Mac" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Mac/"/>
    
      <category term="Anaconda" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>python自动创建requirements.txt</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/10/python%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BArequirements-txt/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/10/python自动创建requirements-txt/</id>
    <published>2019-09-10T12:05:16.000Z</published>
    <updated>2019-09-10T12:13:09.605Z</updated>
    
    <content type="html"><![CDATA[<h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><p>第一种方法适用于虚拟环境或者Docker中生成requirements.txt。  </p><blockquote><p>pip freeze &gt; requirements.txt  </p></blockquote><p>安装requirements.txt依赖。  </p><blockquote><p>pip install -r requirements.txt  </p></blockquote><h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><p>推荐第二种方法，使用pipreqs，导出项目代码中导入的模块。  </p><blockquote><p>pip install pipreqs<br>pipreqs ./CRAWLER_Zhihu/  </p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;方法一：&quot;&gt;&lt;a href=&quot;#方法一：&quot; class=&quot;headerlink&quot; title=&quot;方法一：&quot;&gt;&lt;/a&gt;方法一：&lt;/h2&gt;&lt;p&gt;第一种方法适用于虚拟环境或者Docker中生成requirements.txt。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Windows安装Mysql</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/10/Windows%E5%AE%89%E8%A3%85Mysql/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/10/Windows安装Mysql/</id>
    <published>2019-09-10T07:23:26.000Z</published>
    <updated>2019-09-10T07:35:01.544Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>下载链接：<a href="https://dev.mysql.com/downloads/mysql/5.7.html#downloads" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/5.7.html#downloads</a><br>本机选择的是Mysql5.7.13 zip版本;  </p></li><li><p>解压mysql-5.7.13-winx64.zip，并移动到安装目录下；</p></li><li><p>添加系统环境变量path，内容为D:\MySQL\mysql-5.7.13-winx64 ;  </p></li><li><p>修改配置文件my-default.ini，添加内容：  </p><blockquote><p>basedir = D:\MySQL\mysql-5.7.13-winx64<br>datadir = D:\MySQL\mysql-5.7.13-winx64\data</p></blockquote></li><li><p>以管理员身份运行cmd，输入cd D:\MySQL\mysql-5.7.13-winx64\bin；</p></li><li><p>输入.\mysqld –initialize-insecure –user=mysql 回车;  </p></li><li><p>输入 .\mysqld install 回车;  </p></li><li><p>输入net start mysql 回车启动mysql服务  管理员权限;  </p></li><li><p>输入.\mysql -u root -p 回车登录mysql数据库，没有密码，直接回车;  </p></li><li><p>测试，输入show databases:  </p><img src="/2019/09/10/Windows安装Mysql/1.jpg" title="avatar">  </li></ol><p>输入quit，退出。  </p><ol start="11"><li>输入net stop mysql，停止mysql程序。</li></ol><p>参考链接:  </p><ul><li><a href="https://www.cnblogs.com/ayyl/p/5978418.html" target="_blank" rel="noopener">https://www.cnblogs.com/ayyl/p/5978418.html</a>  </li><li><a href="https://www.cnblogs.com/reyinever/p/8551977.html" target="_blank" rel="noopener">https://www.cnblogs.com/reyinever/p/8551977.html</a>  </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载链接：&lt;a href=&quot;https://dev.mysql.com/downloads/mysql/5.7.html#downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://dev.mysql.com/dow
      
    
    </summary>
    
    
      <category term="软件" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="Mysql" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Mysql/"/>
    
      <category term="Windows" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装Mysql</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/10/Ubuntu%E5%AE%89%E8%A3%85Mysql/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/10/Ubuntu安装Mysql/</id>
    <published>2019-09-10T07:19:48.000Z</published>
    <updated>2019-09-10T07:55:41.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h1><ol><li>首先安装服务端、客户端以及其他的依赖库；  </li></ol><blockquote><p>sudo apt-get install mysql-server<br>sudo apt install mysql-client<br>sudo apt install libmysqlclient-dev  </p></blockquote><ol start="2"><li>测试是否安装成功。</li></ol><blockquote><p>sudo netstat -tap | grep mysql  </p></blockquote><h1 id="设置允许远程访问"><a href="#设置允许远程访问" class="headerlink" title="设置允许远程访问"></a>设置允许远程访问</h1><ol><li>修改配置文件mysqld.conf；  </li></ol><blockquote><p>sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf  </p></blockquote><p>将文件中的bind-address = 127.0.0.1这一行注释掉。  </p><ol start="2"><li>进入Mysql数据库；  </li></ol><blockquote><p>mysql -u root -p  </p></blockquote><p>进入MySQL命令行表示安装成功。  </p><ol start="3"><li>执行授权命令；  </li></ol><blockquote><p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root’@’%’ IDENTIFIED BY ‘密码’ WITH GRANT OPTION;  </p></blockquote><p>其中，root是数据库的用户，*表示所有IP都可以登录该数据库。  </p><ol start="4"><li>保存设置；  </li></ol><blockquote><p>flush privileges;  </p></blockquote><ol start="5"><li><p>退出Mysql用exit；  </p></li><li><p>重启Mysql。</p></li></ol><blockquote><p>service mysql restart  </p></blockquote><p>参考链接：<br><a href="https://andy6804tw.github.io/2019/01/29/ubuntu-mysql-setting/#2-%E9%80%B2%E5%85%A5-mysql-%E6%9C%8D%E5%8B%99" target="_blank" rel="noopener">https://andy6804tw.github.io/2019/01/29/ubuntu-mysql-setting/#2-%E9%80%B2%E5%85%A5-mysql-%E6%9C%8D%E5%8B%99</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装Mysql&quot;&gt;&lt;a href=&quot;#安装Mysql&quot; class=&quot;headerlink&quot; title=&quot;安装Mysql&quot;&gt;&lt;/a&gt;安装Mysql&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;首先安装服务端、客户端以及其他的依赖库；  &lt;/li&gt;
&lt;/ol&gt;
&lt;blockquot
      
    
    </summary>
    
    
      <category term="软件" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="Ubuntu" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Ubuntu/"/>
    
      <category term="Mysql" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Docker创建镜像</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/07/Docker%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8F/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/07/Docker创建镜像/</id>
    <published>2019-09-07T09:38:03.000Z</published>
    <updated>2019-09-08T04:05:36.338Z</updated>
    
    <content type="html"><![CDATA[<p>Docker创建镜像有两种方式:  </p><ul><li>从已经创建镜像的容器中更新镜像，并且提交这个镜像；</li><li>使用Dockerfile指令来创建镜像。</li></ul><h1 id="一、已有镜像更新"><a href="#一、已有镜像更新" class="headerlink" title="一、已有镜像更新"></a>一、已有镜像更新</h1><ol><li><p>在更新镜像之前，先用镜像创建一个容器；  </p><blockquote><p>docker run -t -i ubuntu:18.04  /bin/bash</p></blockquote></li><li><p>执行上述命令之后，会返回一个Container_ID；可以在伪终端中进行修改，比如：apt-get update； </p></li><li><p>再用exit退出容器；  </p></li><li><p>通过docker commit这个命令来提交修改后的容器副本； </p><blockquote><p>docker   commit   -m=”description”   -a=”author”   Container_ID   author/image:tag</p></blockquote></li><li><p>docker images 就可以查看到这个镜像。</p></li></ol><h1 id="Dockerfile创建镜像"><a href="#Dockerfile创建镜像" class="headerlink" title="Dockerfile创建镜像"></a>Dockerfile创建镜像</h1><ol><li><p>首先需要创建一个Dockerfile文件，包含一组指令，而且每一个指令的前缀必须大写。比如官网示例中填入以下内容：  </p><img src="/2019/09/07/Docker创建镜像/1.jpg" title="avatar"><p>FROM 指定使用的镜像源; RUN  告诉docker在镜像中执行的命令。<br>要成功实现该示例，这里还差两个文件：requirement.txt 和 app.py。  </p><img src="/2019/09/07/Docker创建镜像/2.jpg" title="avatar"><img src="/2019/09/07/Docker创建镜像/3.jpg" title="avatar">  </li><li><p>准备工作完成之后，可以使用docker build命令构建镜像；  </p><blockquote><p>docker   build   –tag=ImageName   .  </p><p>说明：  </p><ul><li>命令最后一个”.”，用来指定创建镜像的资源目录，即Dockerfile的目录。  </li><li>-t指定创建的镜像名。</li></ul></blockquote></li><li><p>docker images 查看创建的镜像信息；</p></li><li><p>启动容器；</p><blockquote><p>docker run -p 4000:80 ImageName</p></blockquote><img src="/2019/09/07/Docker创建镜像/4.jpg" title="avatar"></li><li><p>停止容器运行；</p><blockquote><p> docker container stop Conatiner_ID</p></blockquote></li><li><p>使用docker tag命令为镜像添加一个新的标签。</p><blockquote><p> docker tag Container_ID  ImageName:TagName</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Docker创建镜像有两种方式:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从已经创建镜像的容器中更新镜像，并且提交这个镜像；&lt;/li&gt;
&lt;li&gt;使用Dockerfile指令来创建镜像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;一、已有镜像更新&quot;&gt;&lt;a href=&quot;#一、已有镜像更新&quot; 
      
    
    </summary>
    
    
      <category term="Docker" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker命令</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/07/Docker%E5%91%BD%E4%BB%A4/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/07/Docker命令/</id>
    <published>2019-09-07T09:31:34.000Z</published>
    <updated>2019-09-07T09:35:26.397Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h1><ol><li>docker run hello-world 启动hello-world容器镜像<br> docker run -t -i ubuntu:18.04 /bin/bash   运行交互式容器<br> -t : 在新容器内指定一个伪终端或者终端<br>  -i : 通过容器内的标准输入STDIN进行交互<br> docker run -d hello-world  运行容器的后台模式<br> -d : 分离模式，在后台运行</li></ol><ol start="2"><li><p>docker –version或者docker version  查看版本信息</p></li><li><p>docker images或者docker image ls   罗列下载的容器镜像信息</p></li><li><p>docker container ls  查看正在运行的容器实例<br> docker container ls -all  查看所有容器实例</p></li><li><p>docker logs Container_ID   查看容器的标准输出</p></li><li><p>docker ps  查看正在运行的容器实例</p></li><li><p>docker stop Container_ID 或者 Ctrl+D 停止容器的运行</p></li><li><p>docker pull Image_name    载入镜像</p></li><li><p>docker port Container_ID   查看指定容器的端口映射<br> -p 主机端口/容器端口   将容器端口映射到主机端口</p></li><li><p>docker top Container_ID   查看容器内部运行的进程</p></li><li><p>docker rm 移除不需要的Docker镜像</p></li><li><p>docker search Name  搜索镜像</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Docker常用命令&quot;&gt;&lt;a href=&quot;#Docker常用命令&quot; class=&quot;headerlink&quot; title=&quot;Docker常用命令&quot;&gt;&lt;/a&gt;Docker常用命令&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;docker run hello-world 启动hello-w
      
    
    </summary>
    
    
      <category term="Docker" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Push Docker镜像到远程仓库</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/06/Push-Docker%E9%95%9C%E5%83%8F%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/06/Push-Docker镜像到远程仓库/</id>
    <published>2019-09-06T12:14:21.000Z</published>
    <updated>2019-09-06T12:16:29.658Z</updated>
    
    <content type="html"><![CDATA[<p>将本地Docker镜像Push到远程仓库，命令如下：  </p><blockquote><p>docker tag local-image:tagname new-repo:tagname<br>docker push new-repo:tagname</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;将本地Docker镜像Push到远程仓库，命令如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;docker tag local-image:tagname new-repo:tagname&lt;br&gt;docker push new-repo:tagname&lt;/p&gt;
&lt;/bl
      
    
    </summary>
    
    
      <category term="Docker" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装Docker</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/06/Mac%E5%AE%89%E8%A3%85Docker/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/06/Mac安装Docker/</id>
    <published>2019-09-06T10:41:45.000Z</published>
    <updated>2019-09-06T10:55:22.253Z</updated>
    
    <content type="html"><![CDATA[<p>Mac上安装Docker比较简单，直接从<a href="https://hub.docker.com/editions/community/docker-ce-desktop-mac" target="_blank" rel="noopener">官网</a>下载安装文件，再安装就可以了。  </p><p>查看是否安装成功：</p><blockquote><p>docker –version</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Mac上安装Docker比较简单，直接从&lt;a href=&quot;https://hub.docker.com/editions/community/docker-ce-desktop-mac&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;下载安装文件
      
    
    </summary>
    
    
      <category term="Docker" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Docker/"/>
    
      <category term="Mac" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装Docker</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/04/Ubuntu%E5%AE%89%E8%A3%85Docker/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/04/Ubuntu安装Docker/</id>
    <published>2019-09-04T06:31:33.000Z</published>
    <updated>2019-09-05T00:54:51.622Z</updated>
    
    <content type="html"><![CDATA[<ol><li>从Docker仓库下载安装，首先确保能够访问Docker仓库地址:<a href="https://download.docker.com/linux/ubuntu，" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu，</a> 如果能够访问，按照下面的操作步骤进行安装。  <blockquote><p>sudo apt update<br>sudo apt install apt-transport-https ca-certificates curl software-properties-common</p></blockquote></li><li>在/etc/apt/sources.list.d/docker.list文件中添加下面内容；  <blockquote><p>deb [arch=amd64] <a href="https://download.docker.com/linux/ubuntu" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu</a> bionic stable</p></blockquote></li><li>添加秘钥；  <blockquote><p>curl -fsSL <a href="https://download.docker.com/linux/ubuntu/gpg" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu/gpg</a> | sudo apt-key add -</p></blockquote></li><li>安装docker-ce；  <blockquote><p>sudo apt install docker-ce</p></blockquote></li><li>查看是否安装成功。  <blockquote><p>docker –version<br>输出结果： Docker version 19.03.2, build 6a30dfc</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;从Docker仓库下载安装，首先确保能够访问Docker仓库地址:&lt;a href=&quot;https://download.docker.com/linux/ubuntu，&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://downloa
      
    
    </summary>
    
    
      <category term="Docker" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Docker/"/>
    
      <category term="Ubuntu" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>VSCode远程连接开发</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/02/VSCode%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%BC%80%E5%8F%91/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/02/VSCode远程连接开发/</id>
    <published>2019-09-02T07:59:51.000Z</published>
    <updated>2019-09-02T08:23:25.515Z</updated>
    
    <content type="html"><![CDATA[<p>说明： 示例是Mac上的VSCode连接远程Ubuntu服务器。</p><h2 id="一、-服务器配置"><a href="#一、-服务器配置" class="headerlink" title="一、 服务器配置"></a>一、 服务器配置</h2><ol><li>首先，给Ubuntu安装openssh-server；  <blockquote><p>sudo apt-get install openssh-server</p></blockquote></li><li>其次，启动ssh；  <blockquote><p>sudo service ssh start</p></blockquote></li><li>检查ssh是否开启。<blockquote><p>ps -e | grep ssh</p></blockquote></li></ol><h2 id="二、-本地配置"><a href="#二、-本地配置" class="headerlink" title="二、 本地配置"></a>二、 本地配置</h2><ol><li>Mac本身自带了ssh，不必安装；  </li><li>查看是否存在ssh密钥: ~/.ssh/id_rsa_pub；  </li><li>不存在的话，输入命令： ssh-keygen -t rsa -b 4096 ，生成两个文件；  <img src="/2019/09/02/VSCode远程连接开发/key.jpg" title="avatar"></li><li>将本地的公共密钥发送到服务器。  <blockquote><p>ssh-copy-id <a href="mailto:wangmeng@10.61.3.212" target="_blank" rel="noopener">wangmeng@10.61.3.212</a>  </p></blockquote></li></ol><h2 id="三、-VSCode配置"><a href="#三、-VSCode配置" class="headerlink" title="三、 VSCode配置"></a>三、 VSCode配置</h2><ol><li>首先安装VSCode Remote SSH，安装完左侧会显示新图标；  </li><li>点击CONNECTIONS后面的设置图标，再点击第一项进行配置； <img src="/2019/09/02/VSCode远程连接开发/1.jpg" title="avatar"></li><li>设置连接名、服务器地址、服务器上的用户名。  <img src="/2019/09/02/VSCode远程连接开发/2.jpg" title="avatar"><img src="/2019/09/02/VSCode远程连接开发/3.jpg" title="avatar"></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;说明： 示例是Mac上的VSCode连接远程Ubuntu服务器。&lt;/p&gt;
&lt;h2 id=&quot;一、-服务器配置&quot;&gt;&lt;a href=&quot;#一、-服务器配置&quot; class=&quot;headerlink&quot; title=&quot;一、 服务器配置&quot;&gt;&lt;/a&gt;一、 服务器配置&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="Mac" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Mac/"/>
    
      <category term="Ubuntu" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Ubuntu/"/>
    
      <category term="VSCode" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>使用conda安装Python模块</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/02/%E4%BD%BF%E7%94%A8conda%E5%AE%89%E8%A3%85Python%E6%A8%A1%E5%9D%97/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/02/使用conda安装Python模块/</id>
    <published>2019-09-02T07:54:46.000Z</published>
    <updated>2019-09-02T07:58:08.187Z</updated>
    
    <content type="html"><![CDATA[<p>问题：在终端中pip成功安装的模块，在<em>Jupyter-Notebook</em>中<em>import</em>失败，原因在于终端和Jupyter-Notebook使用的Python内核位置不同。  </p><p>如何解决：在Anaconda的bin目录下，使用pip重新安装，conda list查看是否安装成功。  </p><img src="/2019/09/02/使用conda安装Python模块/eg.jpg" title="avatar">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;问题：在终端中pip成功安装的模块，在&lt;em&gt;Jupyter-Notebook&lt;/em&gt;中&lt;em&gt;import&lt;/em&gt;失败，原因在于终端和Jupyter-Notebook使用的Python内核位置不同。  &lt;/p&gt;
&lt;p&gt;如何解决：在Anaconda的bin目录下，使用p
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Python/"/>
    
      <category term="Conda" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Conda/"/>
    
  </entry>
  
  <entry>
    <title>Python中join问题</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/02/Python%E4%B8%ADjoin%E9%97%AE%E9%A2%98/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/02/Python中join问题/</id>
    <published>2019-09-02T04:19:07.000Z</published>
    <updated>2019-09-02T04:32:59.453Z</updated>
    
    <content type="html"><![CDATA[<p>以<em>‘ ‘.join()</em>的方式将列表转为字符串，要求list中的元素都是字符串，否则需要<em>map(str, list)</em>进行转换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = [&#123;<span class="string">"a"</span>:<span class="number">1</span>&#125;, &#123;<span class="string">"b"</span>:<span class="number">2</span>&#125;]  </span><br><span class="line"><span class="string">','</span>.join(map(str, a))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以&lt;em&gt;‘ ‘.join()&lt;/em&gt;的方式将列表转为字符串，要求list中的元素都是字符串，否则需要&lt;em&gt;map(str, list)&lt;/em&gt;进行转换。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu SSR</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/01/Ubuntu-SSR/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/01/Ubuntu-SSR/</id>
    <published>2019-09-01T12:05:02.000Z</published>
    <updated>2019-09-01T13:35:43.892Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ubuntu安装ssr客户端"><a href="#Ubuntu安装ssr客户端" class="headerlink" title="Ubuntu安装ssr客户端"></a>Ubuntu安装ssr客户端</h2><blockquote><ul><li>wget <a href="http://www.djangoz.com/ssr" target="_blank" rel="noopener">http://www.djangoz.com/ssr</a>  </li><li>sudo mv ssr /usr/local/bin  </li><li>sudo chmod 766 /usr/local/bin/ssr  </li><li>ssr install  </li><li>ssr config  </li></ul></blockquote><p>最后一步ssr config，将找的有效节点信息的配置导入，比如用下图中的内容替换config中的内容。<br>有效节点可以在youtube吾爱分享频道、yassuo.xyz、woocloud.online等等的站点获取。  </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"jp1.ssrnode.top"</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>: <span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="attr">"workers"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>: <span class="number">61536</span>,</span><br><span class="line">    <span class="attr">"password"</span>: <span class="string">"8ELIWb"</span>,</span><br><span class="line">    <span class="attr">"method"</span>: <span class="string">"rc4-md5"</span>,</span><br><span class="line">    <span class="attr">"obfs"</span>: <span class="string">"http_simple"</span>,</span><br><span class="line">    <span class="attr">"obfs_param"</span>: <span class="string">"3027117564.microsoft.com"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"auth_aes128_sha1"</span>,</span><br><span class="line">    <span class="attr">"protocol_param"</span>: <span class="string">"17564:7vdNqp"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有git，需要安装： <em>sudo apt-get install git</em></p><h2 id="Ubuntu代理设置"><a href="#Ubuntu代理设置" class="headerlink" title="Ubuntu代理设置"></a>Ubuntu代理设置</h2><p>Ubuntu与Mac和Windows不同，浏览器需要手动设置代理。  </p><ol><li>首先安装SwitchyOmega插件，如果安装Google拒绝安装离线插件，可以先将crx文件改成zip或者rar文件，再加载已解压文件，可以成功安装。  </li><li>安装成功后，再进行配置。新建情景模式或者直接在默认的proxy中按图所示进行修改，主要是代理协议、服务器和代理端口。<img src="/2019/09/01/Ubuntu-SSR/proxy.jpg" title="avatar"></li><li>可以安装一些规则，填完规则列表格式和网址之后，点击立即更新情景模式。  <img src="/2019/09/01/Ubuntu-SSR/principle.jpg" title="avatar"></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ubuntu安装ssr客户端&quot;&gt;&lt;a href=&quot;#Ubuntu安装ssr客户端&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu安装ssr客户端&quot;&gt;&lt;/a&gt;Ubuntu安装ssr客户端&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;wge
      
    
    </summary>
    
    
      <category term="软件" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="Ubuntu" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Mac配置Tunnelblick</title>
    <link href="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/01/Mac%E9%85%8D%E7%BD%AETunnelblick/"/>
    <id>https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/2019/09/01/Mac配置Tunnelblick/</id>
    <published>2019-09-01T09:16:38.000Z</published>
    <updated>2019-09-01T13:37:37.582Z</updated>
    
    <content type="html"><![CDATA[<ol><li>Tunnelblick破解版安装;</li><li>安装之后，点击Tunnelblick，选择我没有配置文件，为我生成配置文件;</li><li>打开自动生成的文件夹，打开config.ovpn;</li><li>配置文件设置：将OpenVPN解压，获取config文件夹，将其中的client.ovpn中的内容复制到config.ovpn中，同时将config文件夹中的其他文件复制到自动生成的文件夹中;</li><li>将自动生成的文件夹改名为trec6.tblk;</li><li>点击右上角的tunnelblick图标，选择VPN详情，将trec6.tblk拖到配置栏中。或者双击进行配置。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;Tunnelblick破解版安装;&lt;/li&gt;
&lt;li&gt;安装之后，点击Tunnelblick，选择我没有配置文件，为我生成配置文件;&lt;/li&gt;
&lt;li&gt;打开自动生成的文件夹，打开config.ovpn;&lt;/li&gt;
&lt;li&gt;配置文件设置：将OpenVPN解压，获取c
      
    
    </summary>
    
    
      <category term="软件" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="Mac" scheme="https://github.com/WangMeng2018/WangMeng2018.github.io/tree/master/tags/Mac/"/>
    
  </entry>
  
</feed>
